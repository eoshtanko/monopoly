/**
 * @author <a href="mailto:eoshtanko@edu.hse.ru"> Ekaterina Shtanko</a>
 */
package cells;

import players.Player;

/**
 * Абстрактный класс, от которого унаследованы клетки всех типов.
 * Содержит общее для всех клеток описание(координаты клетки).
 * Содержит методы доступа к координатам клетки.
 * Содержит абстрактные методы stepIn и toString для реализации в наследниках
 */
public abstract class Cell {
    private final int x, y;

    /**
     * Конструктор Cell
     *
     * @param x значение координаты x с точки зрения использования
     *          двумерного массива(первый аргумент при обращении к двумерному массиву,
     *          отвечает за строки(за высоту, за ось OY)
     * @param y значение координаты y с точки зрения использования
     *          двумерного массива(первый аргумент при обращении к двумерному массиву,
     *          отвечает за столбцы(за ширину, ось OX)
     */
    public Cell(int x, int y) {
        this.x = x;
        this.y = y;
    }

    /**
     * Предоставляет информацию о значении координаты x для вывода(т.е. не с точки зрения использования
     * двумерного массива).
     *
     * @return значение координаты x для вывода(т.е. не с точки зрения использования
     * двумерного массива)
     */
    public int getXOutput() {
        // Решение ниже может показаться нелогичным. Хочу его обосновать.
        // Для реализации игрового поля был использован двумерный массив
        // При создании и обращении к двумерному массиву первый аргумент [x, y]
        // отвечает за строки(за высоту, за ось OY), второй - за столбцы(за ширину, ось OX).
        // Выводить же мне нужно сначала координату на OX, потом - OY
        return y;
    }

    /**
     * Предоставляет информацию о значении координаты y для вывода(т.е. не с точки зрения использования
     * двумерного массива).
     *
     * @return значение координаты y для вывода(т.е. не с точки зрения использования
     * двумерного массива)
     */
    public int getYOutput() {
        // Решение ниже может показаться нелогичным. Хочу его обосновать.
        // Для реализации игрового поля был использован двумерный массив
        // При создании и обращении к двумерному массиву первый аргумент [x, y]
        // отвечает за строки(за высоту, за ось OY), второй - за столбцы(за ширину, ось OX).
        // Выводить же мне нужно сначала координату на OX, потом - OY
        return x;
    }

    /**
     * Вызывется при попадании игрока на соответствующую клетку. Предполагается override методы в наследниках.
     *
     * @param player игрок
     * @throws Exception при завершении игры(один из игроков - банкрот)
     *                   Исключение генерируется при присвоении
     *                   отрицательного значения money игрока
     */
    public abstract void stepIn(Player player) throws Exception;

    /**
     * Возвращает символ отображения клетки на карте.
     *
     * @return символ отображения клетки на карте
     */
    @Override
    public abstract String toString();
}
